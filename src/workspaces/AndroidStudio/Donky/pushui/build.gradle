apply plugin: 'com.android.library'

// ./gradlew clean build generateRelease
apply plugin: 'maven'

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.manifest.srcFile '../../../../modules/Messaging/Simple Push/UI/AndroidManifest.xml'
        main.java.srcDirs = ['../../../../modules/Messaging/Simple Push/UI/src']
        main.res.srcDirs = ['../../../../modules/Messaging/Simple Push/UI/res']
    }
    lintOptions {
        warning 'InvalidPackage'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.2.1'
    compile project(':pushlogic')
}

// Release part

def groupId = project.PUBLISH_GROUP_ID
def artifactId = 'donky-module-push-ui'
def version = project.SDK_VERSION

def localReleaseDest = "${buildDir}/release/${version}"

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

uploadArchives {
    repositories.mavenDeployer {
        pom.groupId = groupId
        pom.artifactId = artifactId
        pom.version = version
        pom.project {

            packaging 'aar'

            licenses {
                license {
                    name 'MIT License'
                    url 'http://www.opensource.org/licenses/mit-license.php'
                    distribution 'repo'
                }
            }
            name 'Donky Push UI'
            description 'Provides UI configuration for Push Module.'
            url project.MOBILE_DONKY_URL

            developers {
                developer {
                    id 'marcinswierczek'
                    name 'Marcin Swierczek';
                    email 'sdk@mobiledonky.com';
                }
            }

            scm {
                url 'https://github.com/Donky-Network/DonkySDK-Android-Modular'
                connection 'scm:git:https://github.com/Donky-Network/DonkySDK-Android-Modular.git'
                developerConnection 'scm:git:https://github.com/Donky-Network/DonkySDK-Android-Modular.git'
            }
        }

        // Add other pom properties here if you want (developer details / licenses)
        repository(url: "file://${localReleaseDest}")
    }
}

task zipRelease(type: Zip) {
    from localReleaseDest
    destinationDir buildDir
    archiveName "${artifactId}-${version}.zip"
}

task generateRelease << {
    println "Release ${version} can be found at ${localReleaseDest}/"
    println "Release ${version} zipped can be found ${buildDir}/release-${version}.zip"
}

generateRelease.dependsOn(uploadArchives)
generateRelease.dependsOn(zipRelease)

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}